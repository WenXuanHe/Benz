// initializing - ÊÇ®ÁöÑÂàùÂßãÂåñÊñπÊ≥ïÔºàÊ£ÄÊü•ÂΩìÂâçÈ°πÁõÆÁä∂ÊÄÅÔºåËé∑ÂèñÈÖçÁΩÆÁ≠âÔºâ
// prompting- Âú®Âì™ÈáåÊèêÁ§∫Áî®Êà∑ÈÄâÊã©Ôºà‰Ω†ÊâìÁîµËØùÁöÑÂú∞Êñπthis.prompt()Ôºâ
// configuring- ‰øùÂ≠òÈÖçÁΩÆÂπ∂ÈÖçÁΩÆÈ°πÁõÆÔºàÂàõÂª∫.editorconfigÊñá‰ª∂ÂíåÂÖ∂‰ªñÂÖÉÊï∞ÊçÆÊñá‰ª∂Ôºâ
// default - Â¶ÇÊûúÊñπÊ≥ïÂêçÁß∞‰∏é‰ºòÂÖàÁ∫ß‰∏çÂåπÈÖçÔºåÂ∞ÜË¢´Êé®ÈÄÅÂà∞Ê≠§ÁªÑ„ÄÇ
// writing - ÁºñÂÜôÁîüÊàêÂô®ÁâπÂÆöÊñá‰ª∂ÔºàË∑ØÁî±ÔºåÊéßÂà∂Âô®Á≠âÔºâÁöÑ‰ΩçÁΩÆ
// conflicts - Â§ÑÁêÜÂÜ≤Á™ÅÔºàÂÜÖÈÉ®‰ΩøÁî®Ôºâ
// install - ËøêË°åÂÆâË£ÖÔºànpmÔºåbowerÔºâ
// end- Áß∞‰∏∫ÊúÄÂêéÔºåÊ∏ÖÁêÜÔºåÂÜçËßÅÂÜçËßÅÁ≠â
const path = require('path');
const chalk = require('chalk'); //‰∏çÂêåÈ¢úËâ≤ÁöÑinfo
const util = require('util');
const Generator = require('yeoman-generator');
const yosay = require('yosay'); //yeomanÂºπÂá∫Ê°Ü
module.exports = class extends Generator {
    info() {
        this.log(chalk.strikethrough(
            'I am going to build your appüè°'
        ));
    }
    constructor(args, opts) {
        super(args, opts);
        this.answers = null;
        this.appname = "Benz";
    }
    paths() {
        this.sourceRoot();
    }
    install() { //ÂÆâË£Ö‰æùËµñ
        // this.installDependencies({
        //     skipInstall: this.options['skip-install']
        // });
    }
    prompting() {
        return this.prompt([{
            type: 'input',
            name: 'name',
            message: 'please Input Your project name',
            default: this.appname // Default to current folder name
        }]).then((answers) => {
            this.log('app name', answers.name);
            this.appname = answers.name;
        });
    }
    writing() {
        const _path = this.appname;
        this.fs.copy(
            this.templatePath('backstop_data'),
            this.destinationPath(_path + '/backstop_data')
        );
        this.fs.copy(
            this.templatePath('build'),
            this.destinationPath(_path + '/build')
        );
        this.fs.copy(
            this.templatePath('src'),
            this.destinationPath(_path + '/src')
        );
         this.fs.copy(
            this.templatePath('templates'),
            this.destinationPath(_path + '/templates')
        );
        this.fs.copy(
            this.templatePath('test'),
            this.destinationPath(_path + '/test')
        );
        this.fs.copyTpl(
            this.templatePath('backstop.json'),
            this.destinationPath(_path + '/backstop.json')
        );
        this.fs.copyTpl(
            this.templatePath('package.json'),
            this.destinationPath(_path + '/package.json'), { packagename: this.appname }
        );
    }
    end() {
        this.log(yosay(
            'ÂàõÂª∫‰ªªÂä°SuccessüòÅ'
        ));
    }
};
